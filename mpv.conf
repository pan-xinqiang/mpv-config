#==============================配置文件优先级==============================
# 高优先级
priority=high



#==============================使用习惯相关==============================
# 如果需要记忆上次播放的位置，去掉下面这行的注释。不能与SVP共存，使用SVP必须把此项设为no。
save-position-on-quit
# 注意，需要mpv.conf所在文件夹有用户写入权限，或者用watch-later-directory=路径来手动指定。
# mpv.conf放APPDATA里是不会有问题的，有问题的是放mpv安装目录但mpv安装目录本身需要管理员权限

# 播放结束后不退出
keep-open=yes

#始终处于最前阶段。配合ontop-playback.lua可以使得暂停之后解除保持最前端。
ontop

#打开的默认音量，范围-1-1000，默认值100
volume=50

#最大音量设置，范围100-1000，默认130
--volume-max=130

#no-border   消除播放器边框

autofit-larger=100%x95%                 # resize window in case it's larger than W%xH% of the screen

cursor-autohide-fs-only                 # 只在全屏模式隐藏鼠标

cursor-autohide=1000                    # 1秒后自动隐藏鼠标

# 想看log就取消这行的注释。mpv.log会保存到桌面
#log-file="~~desktop/mpv.log"

msg-module                              # prepend module name to log messages
msg-color                               # color log messages on terminal
# term-osd-bar                            # display a progress bar on the terminal
# pause                                   # no autoplay



#########
# Cache #
#########

cache=yes
demuxer-max-bytes=400MiB
demuxer-max-back-bytes=150MiB


#==============================画质相关选项==============================

# 软解
hwdec=no

profile=gpu-hq

### gpu-api的选择？
## macOS：  只有opengl可选
## Linux：  vulkan或者opengl，推荐vulkan
## Windows：vulkan、d3d11及opengl都可选。三者理论上vulkan性能最好，但依然推荐d3d11。
## 通过d3d11 api，目前mpv已支持windows的10 bit输出和HDR colorspace的设定。
## HDR metadata pass on正在跟进，独占全屏正在跟进。
#----------------------------------------
### 使用d3d11 （mpv对于windows的默认。显卡注意开自适应电源模式）
gpu-api=d3d11
# 通过d3d11-adapter可以设定mpv使用哪块显卡。详见文档：https://mpv.io/manual/master/#options-d3d11-adapter

# may help with 4K videos
vd-lavc-dr=yes
opengl-pbo=yes

# 如果要插其他视频滤镜，比如deint或者SVP，就要去掉下面这行的注释
# hr-seek-framedrop=no
# "ReClock" replacement

video-sync=display-resample
video-sync-max-video-change=5

# smooth motion
interpolation

temporal-dither
dither-size-fruit=6
# 默认6。会稍微延缓mpv启动
# 有兴趣也可以测试下error diffusion算法



# interpolation使用的算法。详见https://mpv.io/manual/master/#options-tscale
# 一些讨论见 https://github.com/mpv-player/mpv/issues/2685
# 目前的默认为mitchell。总体而言mitchell更平滑（当然不好和SVP插帧比），但会有模糊。oversample没有模糊，但不平滑（基本还原24帧的样子）
# 具体选择哪个请依据自身需求来
tscale=oversample


#icc-profile-auto  # 启用校色
#icc-3dlut-size=256x256x256
# 默认64x64x64。会稍微延缓mpv启动

# 在mpv.conf所在目录下建一个 shaders_cache 空文件夹，以存放编译好的GPU shaders，加速启动。
# 注意！如果不放APPDATA下，确保该文件夹有用户写入权限。
gpu-shader-cache-dir="~~/shaders_cache"


# 为了应对VFR，禁用刷新率切换
# 下面这个脚本选项主要是个autospeedwin（自动调节显示器的刷新率）用的
#script-opts=autospeed-nircmd=true,autospeed-speed=false,autospeed-nircmdc="C:\nircmd-x64\nircmdc.exe",autospeed-monitor=0,autospeed-dwidth=1920,autospeed-dheight=1080,autospeed-bdepth=32,autospeed-rates="23;24;25;29;30;50;59;60",autospeed-exitrate=60,autospeed-minspeed=0.9,autospeed-maxspeed=1.1,autospeed-osd=true,autospeed-osdtime=10,autospeed-osdkey=y,autospeed-estfps=false,autospeed-spause=4
# 注意需要自己下载nircmdc，然后在autospeed-nircmdc里给出绝对路径。或者把nircmdc.exe所在位置加到PATH里
# autospeed-monitor=0是主显示器，1、2、3……是其他副显示器
# dwidth dheight bdepth 宽高和位深
# autospeed-rates="23;24;25;29;30;50;59;60",autospeed-exitrate=60 显示器支持的刷新率和退出时应返回的刷新率。23指23.976
# autospeed-spause=4 自动暂停的时间，秒为单位


#==============================音频相关选项==============================


# WASAPI音频输出（Windows）
# 其他系统请相应更改音频输出方式
ao=wasapi
# 需要独占音频则去掉注释。开启会使得其他程序没声音。
#audio-exclusive=yes

# 如果双声道系统播放多声道影片时有的声道声音没出现，尝试强制设定为双声道
#audio-channels=stereo
# 规格化：
#audio-normalize-downmix=yes
# 多声道音轨downmix成双声道时，如果觉得背景音过响，角色台词声音小，尝试看看这个：https://github.com/mpv-player/mpv/issues/6563

audio-file-auto=fuzzy
#audio-file-paths=audio
alang=jpn,ja,eng,en
#aid=1
# 暂时无法根据其他的metadata选择轨道，mpv又默认偏好外挂轨道，常常选到我不想要的音轨
# 有类似情况的话就用aid=1始终选择第一条音轨再自己手动调吧
# 设计者也是这么推荐的：https://github.com/mpv-player/mpv/issues/967#issuecomment-94744964


#==============================字幕相关选项==============================
sub-auto=fuzzy
sub-file-paths=subs
slang=chi,zh-CN,sc,chs
#sid=1
# 字幕显示出来和xy-subfilter不一样？尝试启用下面的设置
# 关乎字幕是否随视频拉伸
#sub-ass-vsfilter-aspect-compat=no
# 关乎字幕模糊的设定
#sub-ass-vsfilter-blur-compat=no
# 即使都用上了也不一致？那不是这两个选项的问题，重新注释掉这两行，回帖问吧。（多半是vsfilter/libass其中一个的bug）

# 根据视频是否是HDR以及视频aspect ratio决定是否启用blend-subtitles的profile
# 目前HDR->SDR建议关闭blend-subtitles，见https://github.com/mpv-player/mpv/issues/6368
# 如果hdr-compute-peak将来继续改进可能可以兼容blend-subtitles
[HDR_or_21:9]
profile-desc=cond:(p["video-params/primaries"]=="bt.2020" or p["video-params/aspect"]>=2.0)
blend-subtitles=no
# 使字幕输出在黑边上
sub-ass-force-margins=yes

[SDR_and_16:9]
profile-desc=cond:(p["video-params/primaries"]~="bt.2020" and p["video-params/aspect"]<2.0)
blend-subtitles=yes
sub-ass-force-margins=no

#==============================截屏相关选项==============================
screenshot-format=png
screenshot-tag-colorspace=yes
screenshot-high-bit-depth=yes

# --screenshot-directory           String (default: ) [file]
#  --screenshot-format              Choices: jpg jpeg png webp (default: jpg)
#  --screenshot-high-bit-depth      Flag (default: yes)
#  --screenshot-jpeg-quality        Integer (0 to 100) (default: 90)
#  --screenshot-jpeg-source-chroma  Flag (default: yes)
#  --screenshot-png-compression     Integer (0 to 9) (default: 7)
#  --screenshot-png-filter          Integer (0 to 5) (default: 5)
#  --screenshot-tag-colorspace      Flag (default: no)
#  --screenshot-template            String (default: mpv-shot%n)
#  --screenshot-webp-compression    Integer (0 to 6) (default: 4)
#  --screenshot-webp-lossless       Flag (default: no)
#  --screenshot-webp-quality        Integer (0 to 100) (default: 75)


#=============================按分辨率配置相关选项==============================
## 以下根据分辨率和视频帧率设置不同的升/降阶算法，以期获得在能不掉帧的情况下达到最好的效果

## 创建一个基于gpu-hq，用于将一些参数回归到默认的profile：
# [high_quality]
# profile=gpu-hq
# ## !!! 使用  fbo-format=rgba16hf  可能能提高效率
# fbo-format=rgba32f
# ## !!! 使用  fbo-format=rgba16hf  可能能提高效率
# vd-lavc-threads=0

# # 1080 * 1.414213 / 4 = 381.8
# [low] # 240p 360p，启用两次倍增以达到4倍.
# profile-desc=cond:(p["video-params/w"]<=678 and p["video-params/h"]<=381)
# profile=high_quality
# glsl-shaders-clr
# glsl-shaders-append="~~/shaders/KrigBilateral.glsl"
# glsl-shaders-append="~~/shaders/nnedi3-nns32-win8x4.hook"
# glsl-shaders-append="~~/shaders/nnedi3-nns32-win8x4.hook"

# # 1080 / 16 * 9 = 607.5
# [SD] # 480p 576p
# profile-desc=cond:((p["video-params/w"]<1080 and p["video-params/h"]<608) and (p["video-params/w"]>678 or p["video-params/h"]>381))
# profile=high_quality
# glsl-shaders-clr
# glsl-shaders-append="~~/shaders/KrigBilateral.glsl"
# glsl-shaders-append="~~/shaders/nnedi3-nns64-win8x4.hook"

# # 1080 * 1.414213 / 2 = 763.7
# [HD30] # 640p 720p 30fps
# profile-desc=cond:((p["video-params/w"]<1358 and p["video-params/h"]<764) and (p["video-params/w"]>=1080 or p["video-params/h"]>=608) and p["estimated-vf-fps"]<31)
# profile=high_quality
# glsl-shaders-clr
# glsl-shaders-append="~~/shaders/KrigBilateral.glsl"
# glsl-shaders-append="~~/shaders/nnedi3-nns32-win8x4.hook"

# [HD60] # 640p 720p 60fps
# profile-desc=cond:((p["video-params/w"]<1358 and p["video-params/h"]<764) and (p["video-params/w"]>=1080 or p["video-params/h"]>=608) and p["estimated-vf-fps"]>=31)
# profile=high_quality
# glsl-shaders-clr
# glsl-shaders-append="~~/shaders/KrigBilateral.glsl"
# glsl-shaders-append="~~/shaders/SSimSuperRes.glsl"
# # SSimSuperRes推荐关闭sigmoid-upscaling。所以在其他不用SSSR的profile中都要重新设为yes（通过重新设定一遍profile=gpu-hq）
# sigmoid-upscaling=no

# [KrigBilateral] # 另一个profile的例子
# profile=high_quality
# glsl-shaders-clr
# glsl-shaders-append="~~/shaders/KrigBilateral.glsl"

# [FHD] # 1080p
# profile-desc=cond:((p["video-params/w"]<=1920 and p["video-params/h"]<=1080) and (p["video-params/w"]>=1358 or p["video-params/h"]>=764))
# profile=KrigBilateral

# [2K30] # 1440p
# profile-desc=cond:((p["video-params/w"]<=2560 and p["video-params/h"]<=1440) and (p["video-params/w"]>1920 or p["video-params/h"]>1080) and p["estimated-vf-fps"]<31)
# profile=KrigBilateral

# # 4K videos
# [4K30] # low fps: use SSIM to downscale
# profile-desc=cond:((p["video-params/w"]>2560 or p["video-params/h"]>1440) and p["estimated-vf-fps"]<31)
# profile=high_quality
# glsl-shaders-clr
# glsl-shaders-append="~~/shaders/SSimDownscaler.glsl"
# # SSimDownscaler要求。需要在其他profile中重新设为yes（通过重新设定一遍profile=gpu-hq）
# linear-downscaling=no

# [UHD60] # high fps: use no glsl-shaders
# profile-desc=cond:((p["video-params/w"]>1920 or p["video-params/h"]>1080) and p["estimated-vf-fps"]>=31)
# glsl-shaders-clr
# # 如果是1080p屏幕播放4K，可以使用https://gist.github.com/bjin/15f307e7a1bdb55842bbb663ee1950ed
# # glsl-shaders-append="~~/shaders/acme-0.5x.hook"
# # 可以绕过chroma upscaling，并且把之后颜色转换的计算量从4K级降到1080p级。
# fbo-format=auto
# vd-lavc-threads=16
# # 4K HEVC HDR 60fps软解压力很大，默认vd-lavc-threads=0自动识别逻辑核数，分配核数+1个线程，但往往不够，不能将CPU性能压榨到极限，强行分配更多线程数以提高软解性能。
# # 或者直接开硬解，如果显卡支持的话
# hwdec=yes


#禁用默认快捷键方案
no-input-default-bindings
#OSD信息位置、字体大小(x横向左中右left/center/right,y纵向上中下top/center/buttom)
osd-align-x=left
osd-align-y=top
osd-font-size=28
#设置OSD文本信息的持续时间（毫秒）（默认值：1000）
osd-duration=2000
#OSD随窗口大小缩放(yes/no)
osd-scale-by-window=no
#将窗口缩放窗口模式下至大、至小占屏幕的百分比
#autofit-larger=90%x90%
#autofit-smaller=30%x30% 